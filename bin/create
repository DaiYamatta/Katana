#!/usr/bin/env node

var mod_root = require('path').normalize(__dirname + '/../');
var root     = process.cwd() + '/';
var eol      = require('os').platform() == 'win32' ? '\r\n' : '\n';

var info = require(mod_root +'package.json');

var Path     = require('path');
var Fs       = require('fs');
var spawn    = require('child_process').spawn;

var Async    = require('async');
var mkdir    = require('mkdirp');
var copy     = require('../lib/utils').copy;

var App = require('commander');

App.version(info.version);

var Err = function(message) {
  console.log('\n', message);

  process.exit();
}

App.command('create [path]')
.description('create katana application')
.action(function(path) {
  path = path ? Path.resolve(root, path) +'/' : root;

  App.confirm('Create application at: '+ path +' ? [Yes|No]: ', function(ok) {
    if (!ok) { process.exit(); }

    Async.series([
      function(callback) {
        mkdir(path, 0755, function(error) {
          callback(error);
        });
      },
      function(callback) {
        Fs.readdir(mod_root +'template', function(error, items) {
          if (error) { return callback(error); }

          var pending = items.length;

          if (!pending) { return callback(); }

          items.forEach(function(item) {
            copy(mod_root +'template/'+ item, path + item, function(error) {
              if (error) { console.log(error); }

              if (!--pending) {
                callback();
              }
            });
          });
        });
      },
      function(callback) {
        var paths = [
          path + 'application/config/production', 
          path + 'application/models',
          path + 'public/images', 
          path + 'public/scripts', 
          path + 'public/css',
          path + 'modules', 
          path + 'temp/files'
        ];

        Async.forEach(paths, function(path, cb) {
          mkdir(path, 0777, function(error) {
            if (error) { console.log('Warning:'.magenta, 'could not create directory:', path); }

            cb();
          })
        }, function(error) {
          callback(error);
        });
      },
      function(callback) {
        var pack = {
          name: 'katana-app',
          version: '0.0.1',
          private: true,
          dependencies: {
            katana: info.version,
            joose: '*',
            ejs: '*'
          },
          katana: {
            modules: {}
          }
        };
    
        Fs.writeFile(path +'package.json', JSON.stringify(pack, null, 2), function(error) {
          if (error) { console.log('Warning:'.magenta, ' could not write package.json file!'); }

          callback();
        });
      }
    ], function(error, results) {
      if (error) { return Err(error); }

      console.log('App created! Run "npm install" under app root to install dependencies.');

      process.exit();
    })
  });
});

App.parse(process.argv);
