#!/usr/bin/env node

var mod_root = require('path').normalize(__dirname + '/../');
var root     = process.cwd() + '/';
var eol      = require('os').platform() == 'win32' ? '\r\n' : '\n';

var spawn = require('child_process').spawn;

var App = require('commander');

App.version(require(mod_root + 'package').version);
App.usage('katana <command> [options]');

App.on('--help', function() {
  console.log('  Commands:'+ eol);
  console.log('    create [path]                 - create katana application');
  console.log('    module                        - list all available modules');
  console.log('    module install <name> [url]   - install module');
  console.log('    module update                 - update modules list and info');
  console.log('    module <str>                  - search modules');
  console.log('    module enable <name>          - enable module');
  console.log('    module disable <name>         - disable module');
  console.log('    module uninstall <name>       - uninstall module'+ eol);

  process.exit();
});

App.parse(process.argv);

var args = process.argv.slice(3);

var command = App.args[0];

if (!command) {
  process.stdout.write(App.helpInformation());

  App.emit('--help');

  process.exit();
}

if (command === 'module') {
  command = 'modules';
}

var commands = ['create', 'modules'];

if (commands.indexOf(command) === -1) {
  console.log('Error: unknown command. Run --help to list available commands.');

  process.exit();
}

if (command === 'create' || (command !== 'create' && !args.length)) {
  args.unshift(command);
}

var bin = mod_root +'bin/'+ command;

var proc = spawn(bin, args, {
  cwd: root,
  stdio: 'inherit'
});

try {
  ['SIGTERM', 'SIGINT', 'SIGHUP', 'SIGQUIT'].forEach(function(signal) {
    process.on(signal, function() {
      if (proc) {
        proc.kill(signal);
      }

      process.exit();
    });
  });
} catch(e) {}

process.stdin.end(); // possible bug when using stdin.destroy from commander commands callback

App.parse(process.argv);
